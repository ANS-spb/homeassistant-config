- id: '1599946493930'
  alias: Let's Encrypt Renewal
  description: ''
  trigger:
  - at: 00:00:00
    platform: time
  condition: []
  action:
  - data:
      addon: core_letsencrypt
    service: hassio.addon_restart
  mode: single
- id: '1599947443054'
  alias: Hass Startup Notification
  description: ''
  trigger:
  - event: start
    platform: homeassistant
  condition: []
  action:
  - data:
      message: '{{ ''üèÅ'' }} C–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –≤ {{ states(''sensor.time'') }}.'
      title: '{{ ''üÜó'' }} –°–∏—Å—Ç–µ–º–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ'
    service: notify.mobile_app_iphone_ans
  - choose:
    - conditions:
      - condition: state
        entity_id: sensor.daytime
        state: 'off'
      sequence:
      - service: light.turn_off
        data: {}
        entity_id: all
    - conditions: []
      sequence: []
    default: []
  - service: input_boolean.turn_off
    target:
      entity_id: input_boolean.manual_light_off
  mode: single
- id: '1601827285752'
  alias: Hass Shutdown Notification
  description: ''
  trigger:
  - event: shutdown
    platform: homeassistant
  condition: []
  action:
  - data:
      message: '{{ ''‚ùóÔ∏è'' }} –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ {{ states(''sensor.time'') }}'
      title: '{{ ''üÜó'' }} –°–∏—Å—Ç–µ–º–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ'
    service: notify.mobile_app_iphone_ans
  mode: single
- id: '1601829228272'
  alias: Notify away
  description: ''
  trigger:
  - platform: state
    from: home
    to: not_home
    entity_id: group.devices
  condition: []
  action:
  - service: script.dynamic_update_all_light_group
    data: {}
  - delay: 00:00:03
  - choose:
    - conditions:
      - condition: state
        entity_id: group.dyn_all_lights
        state: 'on'
      sequence:
      - service: notify.mobile_app_iphone_ans
        data:
          title: –í—ã–∫–ª—é—á–∏—Ç—å —Å–≤–µ—Ç?
          message: '{% set filter = [''light.50ec50dfc9c5_light'', ''light.50ec50e1b80d_light'']
            %} {{ ''üíß'' }} –ü–æ—Ö–æ–∂–µ, –í—ã —É—à–ª–∏ –∏–∑ –¥–æ–º–∞. –ï—Å—Ç—å {{states.light | rejectattr(''entity_id'',
            ''in'', filter) | selectattr(''entity_id'') | selectattr(''state'',''eq'',''on'')
            | map(attribute=''entity_id'') | list | count | format(morph=''—Ä–∞–±–æ—Ç–∞—é—â–∏–π
            —Å–≤–µ—Ç–∏–ª—å–Ω–∏–∫'', as_text=false)}}.'
          data:
            actions:
            - action: LIGHTSOFF
              title: –í—ã–∫–ª –≤–µ—Å—å —Å–≤–µ—Ç
              destructive: true
    default: []
  mode: single
- id: '1601829524780'
  alias: Push Notify Lights Off
  description: ''
  trigger:
  - platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: LIGHTSOFF
  condition: []
  action:
  - service: light.turn_off
    entity_id: all
  - service: script.turn_on
    data: {}
    target:
      entity_id: script.power_off_all
  mode: single
- id: '1601888806721'
  alias: Alarm CPU high temperature
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.cpu_temp
    above: '65'
    for: 0:05:00
  condition: []
  action:
  - service: notify.mobile_app_iphone_ans
    data:
      title: –í–Ω–∏–º–∞–Ω–∏–µ!
      message: –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞ {{ states("sensor.cpu_temp") }}¬∞!
  mode: single
- id: '1601888980129'
  alias: Alarm room high temperature
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.ble_datchik_v_spalne_temperature
    above: '30'
    for: 0:05:00
  condition: []
  action:
  - service: notify.mobile_app_iphone_ans
    data:
      title: –í–Ω–∏–º–∞–Ω–∏–µ!
      message: –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –∫–æ–º–Ω–∞—Ç–µ —Å–ª–∏—à–∫–æ–º –≤—ã—Å–æ–∫–∞—è –∏ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç {{ states("sensor.ble_datchik_v_spalne_temperature")
        }}¬∞!
  - delay:
      hours: 1
      minutes: 0
      seconds: 0
      milliseconds: 0
  mode: single
- id: '1601889021443'
  alias: Alarm room low temperature
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.ble_datchik_v_spalne_temperature
    for: 0:05:00
    below: '20'
  condition: []
  action:
  - service: notify.mobile_app_iphone_ans
    data:
      title: –í–Ω–∏–º–∞–Ω–∏–µ!
      message: –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –∫–æ–º–Ω–∞—Ç–µ —Å–ª–∏–∂–∫–æ–º –Ω–∏–∑–∫–∞—è –∏ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç {{ states("sensor.ble_datchik_v_spalne_temperature")
        }}¬∞!
  mode: single
- id: '1603558647104'
  alias: –í–∫–ª—é—á–∏—Ç—å –ª–∞–º–ø—É, –µ—Å–ª–∏ —Å—Ç–∞–ª–æ —Ç–µ–º–Ω–æ
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.osveshchionnost_v_spalne_illuminance_lux
    below: '4'
  condition:
  - condition: and
    conditions:
    - condition: template
      value_template: '{{states.light.living_room.state != ''on'' and states.light.torsher.state
        != ''on'' }}'
    - condition: state
      entity_id: group.devices
      state: home
    - condition: time
      after: '12:00'
      before: input_datetime.sleep_time
    - condition: state
      entity_id: input_boolean.manual_light_off
      state: 'off'
  action:
  - service: script.turn_on
    data: {}
    target:
      entity_id: script.1599944056170
  - condition: and
    conditions:
    - condition: sun
      after: sunset
    - condition: state
      entity_id: cover.shtora
      state: open
  - service: script.turn_on
    target:
      entity_id:
      - script.push_for_closing_curtain
    data: {}
  mode: single
- id: '1603558751540'
  alias: –í—ã–∫–ª—é—á–∏—Ç—å –ª–∞–º–ø—É, –µ—Å–ª–∏ —Å—Ç–∞–ª–æ —Å–≤–µ—Ç–ª–æ
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.osveshchionnost_v_spalne_illuminance_lux
    for: 00:00:03
    above: '15'
  condition:
  - condition: or
    conditions:
    - condition: device
      type: is_on
      device_id: fa3818f9a75a0704698062d67b597aba
      entity_id: light.torsher_2
      domain: light
    - condition: device
      type: is_on
      device_id: 27f7e75ef92611eaa6e491c70663ffc5
      entity_id: light.living_room
      domain: light
  action:
  - type: turn_off
    device_id: fa3818f9a75a0704698062d67b597aba
    entity_id: light.torsher_2
    domain: light
  - type: turn_off
    device_id: 27f7e75ef92611eaa6e491c70663ffc5
    entity_id: light.living_room
    domain: light
  mode: single
- id: '1603735395693'
  alias: –£–≥–∞—Å–∞–Ω–∏–µ —Å–≤–µ—Ç–∞ –ø–µ—Ä–µ–¥ —Å–Ω–æ–º
  description: ''
  trigger:
  - platform: template
    value_template: '{{ states(''sensor.time'') == (states.input_datetime.sleep_time.attributes.timestamp
      | int(0) | timestamp_custom(''%H:%M'', False)) }}'
  condition:
  - condition: state
    entity_id: input_boolean.sleep_enabled
    state: 'on'
  - condition: device
    type: is_on
    device_id: 1b788ea3d24640c4765af9db21a3d897
    entity_id: light.torsher
    domain: light
  action:
  - service: hue.activate_scene
    data:
      transition: 10
      dynamic: true
    target:
      entity_id: scene.spalnia_galaktika
  - delay:
      hours: 0
      minutes: 0
      seconds: 3
      milliseconds: 0
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.manual_effects_on
  - choose:
    - conditions:
      - condition: device
        type: is_on
        device_id: d9631ea87a6b46b5e7e5fadb00518bb8
        entity_id: light.wled
        domain: light
      sequence:
      - service: script.turn_on
        data: {}
        target:
          entity_id: script.wled_static_effect
    default: []
  mode: single
- id: '1607099938872'
  alias: –í–∫–ª—é—á–µ–Ω–∏–µ —É—Å–∏–ª–∏—Ç–µ–ª—è –ø—Ä–∏ –≤–∫–ª—é—á–µ–Ω–∏–∏ –ø–ª–µ–µ—Ä–∞
  description: ''
  trigger:
  - platform: state
    entity_id: media_player.volumio
    to: playing
  condition: []
  action:
  - service: switch.turn_on
    data: {}
    entity_id: switch.azur_on
  - wait_template: ''
    continue_on_timeout: true
    timeout: 00:00:03
  - service: switch.turn_on
    data: {}
    entity_id: switch.azur_aux_source
  mode: single
- id: '1607706912213'
  alias: –ö–Ω–æ–ø–∫–∞ –≤ –∫–æ–º–Ω–∞—Ç–µ –≤—ã–∫–ª—é—á–∞–µ—Ç –≤—Å—ë
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.knopka_aqara_komnata_action
    to: single
  condition: []
  action:
  - service: script.turn_on
    data: {}
    target:
      entity_id: script.1644819849093
  - choose:
    - conditions:
      - condition: state
        entity_id: sensor.daytime
        state: 'off'
      sequence:
      - service: switch.turn_on
        target:
          entity_id: switch.adaptive_lighting_sleep_mode_room
        data: {}
    default: []
  mode: single
- id: '1607707032964'
  alias: –ö–Ω–æ–ø–∫–∞ –≤ –∫–æ–º–Ω–∞—Ç–µ —É–ø—Ä–∞–≤–ª—è–µ—Ç —Å–≤–µ—Ç–æ–º
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.knopka_aqara_komnata_action
    to: double
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: sensor.daytime
        state: 'on'
      sequence:
      - service: script.turn_on
        target:
          entity_id: script.1599944056170
        data: {}
    default:
    - service: hue.activate_scene
      data: {}
      target:
        entity_id: scene.torsher_nochnoe_osveshchenie
    - type: turn_on
      device_id: 27f7e75ef92611eaa6e491c70663ffc5
      entity_id: light.living_room
      domain: light
      brightness_pct: 1
  mode: single
- id: '1607720785311'
  alias: –î–î —É–ø—Ä–∞–≤–ª—è–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏ –≥–∏—Ä–ª—è–Ω–¥—ã
  description: ''
  trigger:
  - type: motion
    platform: device
    device_id: a5208bc37a55e0bc1a95e66785a19fb6
    entity_id: binary_sensor.dd_na_kukhne_occupancy
    domain: binary_sensor
  condition:
  - condition: device
    type: is_on
    device_id: d9631ea87a6b46b5e7e5fadb00518bb8
    entity_id: light.wled
    domain: light
  - condition: state
    entity_id: input_boolean.manual_effects_on
    state: 'on'
  action:
  - service: script.wled_random_effect
    data: {}
  mode: single
- id: '1608399857199'
  alias: 'Adaptive lighting: reset manual_control after 1 hour'
  description: ''
  trigger:
  - platform: event
    event_type: adaptive_lighting.manual_control
  condition: []
  action:
  - delay: 01:00:00
  - condition: template
    value_template: '{{ light in state_attr(switch, ''manual_control'') }}'
  - service: adaptive_lighting.set_manual_control
    data:
      entity_id: '{{ switch }}'
      lights: '{{ light }}'
      manual_control: false
  mode: parallel
  variables:
    light: '{{ trigger.event.data.entity_id }}'
    switch: '{{ trigger.event.data.switch }}'
  max: 10
- id: '1609709950828'
  alias: –í–∫–ª—é—á–µ–Ω–∏–µ —É—Å–∏–ª–∏—Ç–µ–ª—è –ø—Ä–∏ –≤–∫–ª—é—á–µ–Ω–∏–∏ CD-–¥–µ–∫–∏
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.onkyo_started
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: switch.turn_on
    data: {}
    entity_id: switch.azur_on
  - wait_template: ''
    continue_on_timeout: true
    timeout: 00:00:03
  - service: switch.turn_on
    data: {}
    entity_id: switch.azur_cd_source
  mode: single
- id: '1610362570344'
  alias: Notification Alert That Batteries Are Low (dynamic)
  description: ''
  trigger:
  - at: '19:00:00'
    platform: time
  condition: []
  action:
  - service: group.set
    data_template:
      object_id: dyn_all_batteries
      entities: '{{ states.sensor | selectattr("attributes.device_class", "eq", "battery")
        | map(attribute="entity_id") | join(",") }}'
  - choose:
    - conditions:
      - condition: template
        value_template: "{% set min_battery_level = 10 -%} {% set ns = namespace(found=false)\
          \ -%} {% for entity_id in states.group.dyn_all_batteries.attributes.entity_id\
          \ -%}\n  {% set parts = entity_id.split('.') -%}\n  {% if (states(entity_id)\
          \ | replace(\"%\",\"\") | int(0)) < min_battery_level -%}\n    {% set ns.found\
          \ = true -%}\n  {% endif -%}\n{% endfor -%} {{ ns.found }}"
      sequence:
      - data_template:
          message: "{%- set min_battery_level = 10 -%} {%- for entity_id in states.group.dyn_all_batteries.attributes.entity_id\
            \ -%}\n  {%- set parts = entity_id.split('.') -%}\n  {%- if (states(entity_id)\
            \ | replace(\"%\",\"\") | int(0)) < min_battery_level -%}\n    {{ states[parts[0]][parts[1]].name\
            \ }} is {{ states(entity_id) }}%{{ '\\n' }}\n  {%- endif -%}\n{%- endfor\
            \ -%}\n"
        service: notify.mobile_app_iphone_ans
    default: []
  mode: single
  initial_state: true
- id: '1610373676864'
  alias: –ö–Ω–æ–ø–∫–∞ –≤ –∫–æ—Ä–∏–¥–æ—Ä–µ –≤—ã–∫–ª—é—á–∞–µ—Ç –≤—Å—ë
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.knopka_v_koridore_action
    to: double
  condition: []
  action:
  - service: script.power_off_all
    data: {}
  - choose:
    - conditions:
      - condition: template
        value_template: "{{ states.binary_sensor \n   | selectattr('attributes.device_class',\
          \ 'eq', 'window')\n   | selectattr('state', 'eq', 'on')\n   | list | length\
          \ > 0 }}"
      sequence:
      - service: notify.mobile_app_iphone_ans
        data:
          title: –û—Ç–∫—Ä—ã—Ç—ã –æ–∫–Ω–∞!
          message: "{{ states.binary_sensor \n | selectattr('attributes.device_class',\
            \ 'eq', 'window')\n | selectattr('state', 'eq', 'on') | map(attribute='name')\n\
            \ | join(\", \") }}\n"
    default: []
  mode: single
- id: '1610518233060'
  alias: Telegram Torrent add command
  trigger:
  - platform: event
    event_type: telegram_command
    event_data:
      command: /add_torrent
  action:
  - service: transmission.add_torrent
    data_template:
      name: Transmission
      torrent: '{{ trigger.event.data.args  | regex_replace(find="^..", replace="",
        ignorecase=False) | regex_replace(find="..$", replace="", ignorecase=False)
        }}'
  initial_state: true
  mode: single
- id: '1610522983136'
  alias: Telegram Torrent Completed
  trigger:
  - platform: event
    event_type: transmission_downloaded_torrent
  action:
  - service: notify.telegram
    data:
      title: Torrent completed!
      message: '{{trigger.event.data.name}}'
  mode: parallel
  max: 10
- id: '1618471116050'
  alias: –£—Ç—Ä–æ–º –≤—ã–∫–ª—é—á–∏—Ç—å –Ω–æ—á–Ω–æ–π —Ä–µ–∂–∏–º
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.daytime
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: switch.turn_off
    target:
      entity_id: switch.adaptive_lighting_sleep_mode_room
    data: {}
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.manual_effects_on
  mode: single
- id: '1619716984692'
  alias: –í—ã–∫–ª—é—á–µ–Ω–∏–µ —É—Å–∏–ª–∏—Ç–µ–ª—è –ø—Ä–∏ –ø—Ä–æ—Å—Ç–æ–µ
  description: ''
  trigger:
  - platform: state
    entity_id: media_player.volumio
    to: paused
    for: 00:05
  - platform: state
    entity_id: media_player.volumio
    to: idle
  condition: []
  action:
  - service: switch.turn_on
    data: {}
    target:
      entity_id:
      - switch.azur_off
  mode: single
- id: '1622805950446'
  alias: –¢–µ—Å—Ç–æ–≤–∞—è - –∫–æ–Ω—Ç–µ–∫—Å—Ç—ã
  description: ''
  trigger:
  - platform: state
    entity_id: light.living_room
    to: 'on'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ trigger.to_state.context.parent_id == none }}'
      sequence:
      - service: notify.telegram
        data:
          message: '–õ–∞–º–ø–∞ –≤–∫–ª—é—á–µ–Ω–∞ –≤—Ä—É—á–Ω—É—é.

            parent id: {{ trigger.to_state.context.parent_id }}

            user id: {{ trigger.to_state.context.user_id }}

            '
    - conditions:
      - condition: template
        value_template: '{{ trigger.to_state.context.user_id == none }}'
      sequence:
      - service: notify.telegram
        data:
          message: '–õ–∞–º–ø–∞ –≤–∫–ª—é—á–µ–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.

            parent id: {{ trigger.to_state.context.parent_id }}

            user id: {{ trigger.to_state.context.user_id }}

            '
    default:
    - service: notify.telegram
      data:
        message:
  mode: single
- id: '1628166260587'
  alias: –ö–æ–Ω—Ç–µ–∫—Å—Ç—ã (–≤—ã–∫–ª—é—á–µ–Ω–∏–µ –ª–∞–º–ø—ã)
  description: ''
  trigger:
  - platform: state
    entity_id: light.living_room
    to: 'off'
    from: 'on'
  condition:
  - condition: or
    conditions:
    - condition: template
      value_template: '{{ trigger.to_state.context.parent_id == none }}'
    - condition: template
      value_template: '{{ states.light.living_room.context.id == states.automation.knopka_v_komnate_vykliuchaet_vsio.context.id
        }}'
    - condition: template
      value_template: '{{ states.light.living_room.context.id == states.automation.knopka_v_koridore_vykliuchaet_vsio.context.id
        }}'
  action:
  - service: input_boolean.turn_on
    target:
      entity_id: input_boolean.manual_light_off
    data: {}
  mode: restart
- id: '1629361649319'
  alias: –û—Ç–∫–ª—é—á–∏—Ç—å –∫–æ–ª–µ—Å–æ –æ—Ç –∑–∞—Ä—è–¥–∫–∏
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.0x04cf8cdf3c76548d_power
    below: '3.7'
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition:
  - condition: state
    entity_id: switch.0x04cf8cdf3c76548d_plug
    state: 'on'
  action:
  - service: switch.turn_off
    data: {}
    target:
      entity_id: switch.0x04cf8cdf3c76548d_plug
  - service: notify.mobile_app_iphone_ans
    data:
      message: –ö–æ–ª–µ—Å–æ –∑–∞—Ä—è–¥–∏–ª–æ—Å—å
  mode: single
- id: '1634548542278'
  alias: –ö–æ–Ω—Ç–µ–∫—Å—Ç—ã (–≤—ã–∫–ª—é—á–µ–Ω–∏–µ —Ç–æ—Ä—à–µ—Ä–∞)
  description: ''
  trigger:
  - platform: state
    entity_id: light.torsher
    to: 'off'
    from: 'on'
  condition:
  - condition: or
    conditions:
    - condition: template
      value_template: '{{ trigger.to_state.context.parent_id == none }}'
    - condition: template
      value_template: '{{ states.light.torsher.context.id == states.automation.knopka_v_komnate_vykliuchaet_vsio.context.id
        }}'
    - condition: template
      value_template: '{{ states.light.torsher.context.id == states.automation.knopka_v_koridore_vykliuchaet_vsio.context.id
        }}'
  action:
  - service: input_boolean.turn_on
    target:
      entity_id: input_boolean.manual_light_off
    data: {}
  mode: restart
- id: '1635257248536'
  alias: –í–∫–ª—é—á–∏—Ç—å —Å–≤–µ—Ç –≤ –ø—Ä–∏—Ö–æ–∂–µ–π –ø–æ –ø—Ä–∏—Ö–æ–¥—É –¥–æ–º–æ–π
  description: ''
  trigger:
  - platform: state
    entity_id: device_tracker.ble_tracker_nut
    from: not_home
    to: home
    for:
      hours: 0
      minutes: 0
      seconds: 0
  condition:
  - condition: template
    value_template: '{{states.light.prikhozhaia.state != ''on'' and states.light.torsher.state
      != ''on'' and states.light.kukhnia_hue.state != ''on'' and states.light.living_room.state
      != ''on'' }}'
  - condition: numeric_state
    entity_id: sensor.osveshchionnost_v_spalne_illuminance_lux
    below: '4'
  - condition: numeric_state
    entity_id: sensor.osveshchionnost_na_kukhne_illuminance_lux
    below: '5'
  - condition: state
    entity_id: sensor.daytime
    state: 'on'
  action:
  - service: light.turn_on
    data: {}
    target:
      entity_id: light.prikhozhaia
  - delay:
      hours: 0
      minutes: 0
      seconds: 30
      milliseconds: 0
  - condition: state
    entity_id: light.prikhozhaia
    state: 'on'
  - service: script.turn_on
    target:
      entity_id: script.1599944056170
    data: {}
  - condition: state
    entity_id: sun.sun
    state: below_horizon
  - service: cover.open_cover
    data: {}
    target:
      entity_id: cover.shtora
  mode: single
- id: '1641831168397'
  alias: –í–∫–ª—é—á–∏—Ç—å —Å–≤–µ—Ç –≤ –ø—Ä–∏—Ö–æ–∂–µ–π –∫–Ω–æ–ø–∫–æ–π –Ω–∞ –¥–≤–µ—Ä–∏
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.knopka_v_koridore_action
    to: single
  action:
  - service: light.turn_on
    data: {}
    target:
      entity_id: light.prikhozhaia
  - delay:
      hours: 0
      minutes: 0
      seconds: 30
      milliseconds: 0
  - condition: state
    state: 'on'
    entity_id: light.prikhozhaia
  - condition: template
    value_template: '{{states.light.torsher.state != ''on'' and states.light.kukhnia_hue.state
      != ''on'' and states.light.living_room.state != ''on'' }}'
  - condition: numeric_state
    entity_id: sensor.osveshchionnost_v_spalne_illuminance_lux
    below: '4'
  - condition: numeric_state
    entity_id: sensor.osveshchionnost_na_kukhne_illuminance_lux
    below: '5'
  - condition: state
    entity_id: sensor.daytime
    state: 'on'
  - service: script.turn_on
    target:
      entity_id: script.1599944056170
    data: {}
  - condition: state
    entity_id: sun.sun
    state: below_horizon
  - service: cover.open_cover
    data: {}
    target:
      entity_id: cover.shtora
  mode: single
- id: '1643210773948'
  alias: Push Notify Open Curtain
  description: ''
  trigger:
  - platform: event
    event_type: ios.notification_action_fired
    event_data:
      actionName: OPENCURTAIN
  condition: []
  action:
  - service: cover.open_cover
    target:
      entity_id: cover.shtora
  mode: single
- id: '1643211183839'
  alias: Push Notify Close Curtain
  description: ''
  trigger:
  - platform: event
    event_type: ios.notification_action_fired
    event_data:
      actionName: CLOSECURTAIN
  condition: []
  action:
  - service: cover.close_cover
    target:
      entity_id: cover.shtora
  mode: single
- id: '1643380255470'
  alias: –í–∫–ª—é—á–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏–∫–∏ –æ—Å–≤–µ—â–µ–Ω–∏—è (—Ç–∞–π–º–∞—É—Ç)
  description: ''
  trigger:
  - platform: state
    entity_id: input_boolean.manual_light_off
    to: 'on'
  condition: []
  action:
  - delay:
      hours: 1
      minutes: 0
      seconds: 0
      milliseconds: 0
  - service: input_boolean.turn_off
    target:
      entity_id: input_boolean.manual_light_off
  mode: restart
- id: '1643463448231'
  alias: Opple —É–ø—Ä–∞–≤–ª—è–µ—Ç —à—Ç–æ—Ä–æ–π
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.opple_action
    to: button_1_single
  - platform: state
    entity_id: sensor.opple_action
    to: button_2_single
  condition:
  - condition: template
    value_template: '{{ trigger.from_state.state != "unavailable" and trigger.from_state.state
      != "unknown" }}'
  action:
  - wait_for_trigger:
    - platform: state
      entity_id: sensor.opple_action
    continue_on_timeout: true
    timeout: '30'
  - service: cover.stop_cover
    target:
      entity_id: cover.shtora
    data: {}
  mode: single
- id: '1645027916506'
  alias: –ó–≤–æ–Ω–æ–∫ –≤ –¥–æ–º–æ—Ñ–æ–Ω
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.domofon_state
    from: Idle
    to: Ring
  condition: []
  action:
  - variables:
      action_open: '{{ ''OPEN_'' ~ context.id }}'
      action_drop: '{{ ''DROP_'' ~ context.id }}'
  - service: notify.mobile_app_iphone_ans
    data:
      title: –î–æ–º–æ—Ñ–æ–Ω
      message: –ö—Ç–æ-—Ç–æ –∑–≤–æ–Ω–∏—Ç –≤ –∫–≤–∞—Ä—Ç–∏—Ä—É!
      data:
        entity_id: camera.domru_domofon
        actions:
        - action: '{{ action_open }}'
          title: –û—Ç–∫—Ä—ã—Ç—å –¥–≤–µ—Ä—å
          destructive: true
        - action: '{{ action_drop }}'
          title: –°–≥–∏–Ω—å
  - service: camera.snapshot
    data:
      filename: /media/domofon.jpg
    target:
      entity_id: camera.domru_domofon
  - service: telegram_bot.send_photo
    data:
      url: http://127.0.0.1:5000/api/events/{{states.input_text.frigate_event.state}}/snapshot.jpg?bbox=1&crop=1&timestamp=1
      target:
      - 116325704
      parse_mode: html
      timeout: 1000
      message_tag: msg_to_edit
      disable_notification: true
      caption: –ö—Ç–æ —Å—Ç—É—á–∏—Ç—Å—è –≤ –¥–≤–µ—Ä—å –º–æ—è?
  - service: telegram_bot.send_photo
    data:
      file: /media/domofon.jpg
      caption: üö® {{ [ "–ö—Ç–æ-—Ç–æ –∑–≤–æ–Ω–∏—Ç –≤ –¥–≤–µ—Ä—å", "–ö—Ç–æ-—Ç–æ –ª–æ–º–∏—Ç—Å—è –≤ –¥–≤–µ—Ä—å", "–û–ø—è—Ç—å –ø—Ä–∏–ø—ë—Ä–ª–∏—Å—å",
        "–î–∑–∏–Ω—å-–¥–∑–∏–Ω—å", "–¢—É–∫-—Ç—É–∫", "–ì–æ—Å—Ç–∏ –Ω–∞ –ø–æ—Ä–æ–≥–µ", "–ñ–∏–≤—ã–µ –Ω–∞—Å—Ç—É–ø–∞—é—Ç!", "–≠—Ç–æ —Å–ª—É—á–∞–π–Ω–æ
        –Ω–µ –¥–æ—Å—Ç–∞–≤–∫–∞ –ø–∏—Ü—Ü—ã?", "–ö–æ–∂–∞–Ω—ã–π –º–µ—à–æ–∫ —É –≤–æ—Ä–æ—Ç"] | random }}
      target:
      - 116325704
      parse_mode: html
      timeout: 1000
      inline_keyboard:
      - '{{"\U0001F6AA"}} –û—Ç–∫—Ä—ã—Ç—å –¥–≤–µ—Ä—å:/open_door'
      - ‚õîÔ∏è –°–±—Ä–æ—Å–∏—Ç—å:/drop_domofon
      - üì∏ –ü–æ–∫–∞–∑–∞—Ç—å:/photo_entrance,  üïµÔ∏è‚Äç‚ôÇÔ∏è –î–µ—Ç–µ–∫—Ç:/person_entrance
      message_tag: msg_to_edit
  - service: notify.tv
    data:
      message: –ö—Ç–æ-—Ç–æ –∑–≤–æ–Ω–∏—Ç –≤ –¥–æ–º–æ—Ñ–æ–Ω!
  - wait_for_trigger:
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: '{{ action_open }}'
    - platform: event
      event_type: mobile_app_notification_action
      event_data:
        action: '{{ action_drop }}'
    continue_on_timeout: false
    timeout: 00:01:00
  - choose:
    - conditions:
      - condition: template
        value_template: '{{ wait.trigger.event.data.action == action_open }}'
      - condition: template
        value_template: '{{ states.sensor.domofon_state.state != "Idle" }}'
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.domofon_once
      - service: script.turn_on
        target:
          entity_id: script.domru_open_door_657617
        data: {}
      - service: logbook.log
        data:
          name: –ó–≤–æ–Ω–æ–∫ –≤ –¥–æ–º–æ—Ñ–æ–Ω
          message: –û—Ç–∫—Ä—ã—Ç–∏–µ –¥–≤–µ—Ä–∏ –ø–∞—Ä–∞–¥–Ω–æ–π —Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞
          entity_id: automation.zvonok_v_domofon
    - conditions:
      - condition: template
        value_template: '{{ wait.trigger.event.data.action == action_drop }}'
      - condition: template
        value_template: '{{ states.sensor.domofon_state.state != "Idle" }}'
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.domofon_drop
      - service: logbook.log
        data:
          name: –ó–≤–æ–Ω–æ–∫ –≤ –¥–æ–º–æ—Ñ–æ–Ω
          message: –°–±—Ä–æ—Å –∑–≤–æ–Ω–∫–∞ —Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞
          entity_id: automation.zvonok_v_domofon
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.domofon_drop
    default:
    - service: notify.mobile_app_iphone_ans
      data:
        message: –ü—Ä–æ—Å—Ä–∞–ª –ø–æ–ª–∏–º–µ—Ä—ã
        title: –î–æ–º–æ—Ñ–æ–Ω
    - service: telegram_bot.send_message
      data:
        target:
        - 116325704
        parse_mode: html
        disable_notification: true
        title: –î–æ–º–æ—Ñ–æ–Ω
        message: –í–∞—à–∞ –ª–æ—à–∞–¥—å —Ç–∏—Ö–æ —Ö–æ–¥–∏—Ç. –°—Ç–∞—Ç—É—Å –¥–æ–º–æ—Ñ–æ–Ω–∞ {{ states.sensor.domofon_state.state
          }}. –ó–∞–ø—Ä–æ—Å –Ω–∞ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω.
    - service: logbook.log
      data:
        name: –ó–≤–æ–Ω–æ–∫ –≤ –¥–æ–º–æ—Ñ–æ–Ω
        entity_id: automation.zvonok_v_domofon
        message: –ó–∞–ø—Ä–æ—Å –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω - –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø–æ —É—Å–ª–æ–≤–∏—è–º. –ü–æ–ª–∏–º–µ—Ä—ã –ø—Ä–æ—Å—Ä–∞–Ω—ã.
          –°—Ç–∞—Ç—É—Å –¥–æ–º–æ—Ñ–æ–Ω–∞ {{ states.sensor.domofon_state.state }}.
  mode: single
- id: '1645086792531'
  alias: –§–æ—Ç–æ —Å –¥–æ–º–æ—Ñ–æ–Ω–∞ –ø–æ –∫–æ–º–∞–Ω–¥–µ
  description: ''
  trigger:
  - platform: event
    event_type: telegram_command
    event_data:
      command: /photo_entrance
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /photo_entrance
  condition: []
  action:
  - service: camera.snapshot
    target:
      entity_id: camera.domru_domofon
    data:
      filename: /media/domofon.jpg
  - service: telegram_bot.send_photo
    data:
      file: /media/domofon.jpg
      target: '{{ trigger.event.data.user_id }}'
      parse_mode: html
      disable_notification: true
      timeout: 1000
      inline_keyboard:
      - '{{"\U0001F6AA"}} –û—Ç–∫—Ä—ã—Ç—å –¥–≤–µ—Ä—å:/open_door'
      - üì∏ –ü–æ–∫–∞–∑–∞—Ç—å:/photo_entrance,  üïµÔ∏è‚Äç‚ôÇÔ∏è –î–µ—Ç–µ–∫—Ç:/person_entrance
      - üîô –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é:/back
      message_tag: msg_to_edit
  mode: single
- id: '1645086906100'
  alias: –û—Ç–∫—Ä—ã—Ç—å –∏–ª–∏ —Å–±—Ä–æ—Å–∏—Ç—å –¥–æ–º–æ—Ñ–æ–Ω –ø–æ –∫–æ–º–∞–Ω–¥–µ
  description: ''
  trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /open_door
    id: open
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /drop_domofon
    id: drop
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: open
      - condition: template
        value_template: '{{ states.sensor.domofon_state.state != "Idle" }}'
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.domofon_once
      - service: script.turn_on
        data: {}
        target:
          entity_id: script.domru_open_door_657617
      - service: logbook.log
        data:
          name: –ó–≤–æ–Ω–æ–∫ –≤ –¥–æ–º–æ—Ñ–æ–Ω
          message: –û—Ç–∫—Ä—ã—Ç–∏–µ –¥–æ–º–æ—Ñ–æ–Ω–∞ –∏–∑ Telegram
          entity_id: automation.zvonok_v_domofon
    - conditions:
      - condition: trigger
        id: drop
      - condition: template
        value_template: '{{ states.sensor.domofon_state.state != "Idle" }}'
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.domofon_drop
      - service: logbook.log
        data:
          name: –ó–≤–æ–Ω–æ–∫ –≤ –¥–æ–º–æ—Ñ–æ–Ω
          message: –°–±—Ä–æ—Å –∑–≤–æ–Ω–∫–∞ –∏–∑ Telegram
          entity_id: automation.zvonok_v_domofon
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.domofon_drop
    default:
    - service: telegram_bot.send_message
      data:
        target:
        - 116325704
        parse_mode: html
        disable_notification: true
        message: –ó–≤–æ–Ω–æ–∫ –≤ –¥–æ–º–æ—Ñ–æ–Ω –ø—Ä–æ–ø—É—â–µ–Ω –∏–ª–∏ –Ω–µ–∞–∫—Ç—É–∞–ª–µ–Ω, –¥–æ–º–æ—Ñ–æ–Ω (—É–∂–µ) –Ω–µ –∑–≤–æ–Ω–∏—Ç.
    - service: logbook.log
      data:
        name: –ó–≤–æ–Ω–æ–∫ –≤ –¥–æ–º–æ—Ñ–æ–Ω
        entity_id: automation.zvonok_v_domofon
        message: –ó–∞–ø—Ä–æ—Å –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω - –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø–æ —É—Å–ª–æ–≤–∏—è–º. –°—Ç–∞—Ç—É—Å –¥–æ–º–æ—Ñ–æ–Ω–∞ {{
          states.sensor.domofon_state.state }}, –≤—ã–∑–≤–∞–Ω–Ω—ã–π —Ç—Ä–∏–≥–≥–µ—Ä {{ trigger.id }}.
  mode: single
- id: '1645117603050'
  alias: –ó–≤–æ–Ω–æ–∫ –≤ –¥–æ–º–æ—Ñ–æ–Ω (–≤–∏–¥–µ–æ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º)
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.domofon_state
    from: Idle
    to: Ring
  condition: []
  action:
  - service: camera.record
    data:
      filename: /media/record.mp4
      duration: 5
    target:
      entity_id: camera.domru_domofon_657617
  - delay:
      hours: 0
      minutes: 0
      seconds: 10
      milliseconds: 0
  - service: telegram_bot.send_video
    data:
      file: /media/record.mp4
      target:
      - 116325704
      parse_mode: html
      timeout: 1000
      message_tag: msg_to_edit
      disable_notification: true
      caption: –ê –≤–æ—Ç –∏ –≤–∏–¥–æ—Å–∏–∫ –ø–æ–¥—ä–µ—Ö–∞–ª
  mode: single
- id: '1645168133405'
  alias: –ó–≤–æ–Ω–æ–∫ –≤ –¥–≤–µ—Ä—å
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.zvonok
    from: 'on'
    to: 'off'
  condition: []
  action:
  - data:
      message: ' '
      title: üîî –ó–≤–æ–Ω–æ–∫ –≤ –¥–≤–µ—Ä—å! üîî
      data:
        push:
          interruption-level: time-sensitive
          sound:
            name: alarm.caf
            critical: 1
            volume: 1
    service: notify.mobile_app_iphone_ans
  - service: telegram_bot.send_message
    data:
      target:
      - 116325704
      parse_mode: markdown
      message: üîî *–ó–≤–æ–Ω—è—Ç –≤ –¥–≤–µ—Ä—å!* üîî
  - service: notify.tv
    data:
      message: –ó–≤–æ–Ω–æ–∫ –≤ –¥–≤–µ—Ä—å!
  - delay:
      hours: 0
      minutes: 0
      seconds: 10
      milliseconds: 0
  mode: single
- id: '1645189263720'
  alias: –§–æ—Ç–æ –ø–µ—Ä—Å–æ–Ω—ã —Å –¥–æ–º–æ—Ñ–æ–Ω–∞ –ø–æ –∫–æ–º–∞–Ω–¥–µ
  description: ''
  trigger:
  - platform: event
    event_type: telegram_command
    event_data:
      command: /person_entrance
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /person_entrance
  condition: []
  action:
  - service: telegram_bot.send_photo
    data:
      url: http://127.0.0.1:5000/api/events/{{states.input_text.frigate_event.state}}/snapshot.jpg?bbox=1&crop=1&timestamp=1
      target: '{{ trigger.event.data.user_id }}'
      parse_mode: html
      disable_notification: true
      timeout: 1000
      message_tag: msg_to_edit
      inline_keyboard:
      - '{{"\U0001F6AA"}} –û—Ç–∫—Ä—ã—Ç—å –¥–≤–µ—Ä—å:/open_door'
      - üì∏ –ü–æ–∫–∞–∑–∞—Ç—å:/photo_entrance,  üïµÔ∏è‚Äç‚ôÇÔ∏è –î–µ—Ç–µ–∫—Ç:/person_entrance
      - üîô –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é:/back
  mode: single
- id: '1645552823469'
  alias: –ó–≤–æ–Ω–æ–∫ –≤ –¥–æ–º–æ—Ñ–æ–Ω (–∏–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ)
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.domofon_state
    from: Open
    to: Idle
    id: opened
  - platform: state
    entity_id: sensor.domofon_state
    from: Drop
    to: Idle
    id: dropped
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: opened
      sequence:
      - service: notify.mobile_app_iphone_ans
        data:
          message: –î–≤–µ—Ä—å –æ—Ç–∫—Ä—ã—Ç–∞
          title: –î–æ–º–æ—Ñ–æ–Ω
      - service: telegram_bot.send_message
        data:
          target:
          - 116325704
          parse_mode: html
          disable_notification: true
          message: –î–≤–µ—Ä—å –æ—Ç–∫—Ä—ã—Ç–∞
          title: –î–æ–º–æ—Ñ–æ–Ω
    - conditions:
      - condition: trigger
        id: dropped
      sequence:
      - service: notify.mobile_app_iphone_ans
        data:
          message: –ó–≤–æ–Ω–æ–∫ —Å–±—Ä–æ—à–µ–Ω
          title: –î–æ–º–æ—Ñ–æ–Ω
      - service: telegram_bot.send_message
        data:
          target:
          - 116325704
          parse_mode: html
          disable_notification: true
          message: –ó–≤–æ–Ω–æ–∫ –¥–æ–º–æ—Ñ–æ–Ω–∞ —Å–±—Ä–æ—à–µ–Ω
          title: –î–æ–º–æ—Ñ–æ–Ω
    default: []
  mode: single
- id: '1646123055658'
  alias: Frigate event
  description: ''
  trigger:
  - platform: mqtt
    topic: frigate/events
  condition:
  - condition: template
    value_template: '{{ trigger.payload_json[''after''][''camera''] == ''domru_domofon''
      }}'
  action:
  - service: input_text.set_value
    target:
      entity_id: input_text.frigate_event
    data:
      value: '{{trigger.payload_json["after"]["id"]}}'
  mode: parallel
- id: '1646401197588'
  alias: Radiacode —É–Ω—é—Ö–∞–ª –ø—Ä–æ–±–ª–µ–º—É
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.radiacode
    above: '30'
  - platform: numeric_state
    entity_id: sensor.radiacode
    above: '50'
  - platform: numeric_state
    entity_id: sensor.radiacode
    above: '100'
  condition: []
  action:
  - service: notify.mobile_app_iphone_ans
    data:
      title: ‚ò¢Ô∏è –†–∞–¥–∏–∞—Ü–∏–æ–Ω–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
      message: "–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ –ø–æ—Ä–æ–≥–∞ —Ä–∞–¥–∏–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–æ–Ω–∞. –ú–æ—â–Ω–æ—Å—Ç—å –¥–æ–∑—ã: {{\
        \ states('sensor.radiacode') }} {{ state_attr('sensor.radiacode', 'unit_of_measurement')\
        \ }} –ø—Ä–∏ —Å—Ä–µ–¥–Ω–µ–º {{ states('sensor.radiacode_dr_mean_value') }} {{ state_attr('sensor.radiacode_dr_mean_value',\
        \ 'unit_of_measurement') }}. \n–°–∫–æ—Ä–æ—Å—Ç—å —Å—á—ë—Ç–∞: {{ states('sensor.radiacode_cr')\
        \ }} CPS  –ø—Ä–∏ —Å—Ä–µ–¥–Ω–µ–º {{ states('sensor.radiacode_cr_mean_value') }} CPS."
  - service: notify.telegram
    data:
      title: ‚ò¢Ô∏è *–†–∞–¥–∏–∞—Ü–∏–æ–Ω–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥*
      message: "*–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ –ø–æ—Ä–æ–≥–∞ —Ä–∞–¥–∏–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–æ–Ω–∞*. –ú–æ—â–Ω–æ—Å—Ç—å –¥–æ–∑—ã:\
        \ *{{ states('sensor.radiacode') }} {{ state_attr('sensor.radiacode', 'unit_of_measurement')\
        \ }}* –ø—Ä–∏ —Å—Ä–µ–¥–Ω–µ–º –∑–Ω–∞—á–µ–Ω–∏–∏ –∑–∞ 24 —á–∞—Å–∞ {{ states('sensor.radiacode_dr_mean_value')\
        \ }} {{ state_attr('sensor.radiacode_dr_mean_value', 'unit_of_measurement')\
        \ }}. \n–°–∫–æ—Ä–æ—Å—Ç—å —Å—á—ë—Ç–∞: {{ states('sensor.radiacode_cr') }} CPS  –ø—Ä–∏ —Å—Ä–µ–¥–Ω–µ–º\
        \ –∑–Ω–∞—á–µ–Ω–∏–∏ –∑–∞ 24 —á–∞—Å–∞ {{ states('sensor.radiacode_cr_mean_value') }} CPS."
  - service: notify.telegram
    data:
      title: ‚ò¢Ô∏è *–†–∞–¥–∏–∞—Ü–∏–æ–Ω–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ TEST*
      message: "*–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–µ –ø–æ—Ä–æ–≥–∞ —Ä–∞–¥–∏–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–æ–Ω–∞*. –ú–æ—â–Ω–æ—Å—Ç—å –¥–æ–∑—ã:\
        \ *{{ trigger.to_state.state }}  {{ trigger.to_state.attributes.unit_of_measurement\
        \ }}* –ø—Ä–∏ —Å—Ä–µ–¥–Ω–µ–º –∑–Ω–∞—á–µ–Ω–∏–∏ –∑–∞ 24 —á–∞—Å–∞ {{ states('sensor.radiacode_dr_mean_value')\
        \ }} {{ state_attr('sensor.radiacode_dr_mean_value', 'unit_of_measurement')\
        \ }}. \n–°–∫–æ—Ä–æ—Å—Ç—å —Å—á—ë—Ç–∞: {{ states('sensor.radiacode_cr') }} CPS  –ø—Ä–∏ —Å—Ä–µ–¥–Ω–µ–º\
        \ –∑–Ω–∞—á–µ–Ω–∏–∏ –∑–∞ 24 —á–∞—Å–∞ {{ states('sensor.radiacode_cr_mean_value') }} CPS."
  mode: single
- id: '1647947761669'
  alias: Radiacode –æ—Ç–≤–∞–ª–∏–ª—Å—è, –ø—Ä–∏—Å–ª–∞—Ç—å –≤ —Ç–µ–ª–µ–≥—É
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /5
  condition:
  - condition: state
    entity_id: device_tracker.ble_tracker_radiacode
    state: home
  - condition: template
    value_template: '{% if states(''sensor.radiacode'') != "unknown" %}

      {{ (as_timestamp(now()) - as_timestamp(states.sensor.radiacode.last_updated))
      > 120 }}

      {% elif states(''sensor.radiacode'') == "unknown" %}

      true

      {% else %}

      false

      {% endif %}'
  action:
  - service: notify.telegram
    data:
      title: ‚ò¢Ô∏è *–†–∞–¥–∏–∞—Ü–∏–æ–Ω–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥*
      message: '–î–æ–∑–∏–º–µ—Ç—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö: {{ relative_time(states.sensor.radiacode.last_updated)
        }} –Ω–∞–∑–∞–¥.

        –ü–æ—Å–ª–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: *{{ states(''sensor.radiacode'') }} {{ state_attr(''sensor.radiacode'',
        ''unit_of_measurement'') }}* –ø—Ä–∏ —Å—Ä–µ–¥–Ω–µ–º –∑–Ω–∞—á–µ–Ω–∏–∏ –∑–∞ 24 —á–∞—Å–∞ {{ states(''sensor.radiacode_dr_mean_value'')
        }} {{ state_attr(''sensor.radiacode_dr_mean_value'', ''unit_of_measurement'')
        }}.'
  mode: single
- id: '1648154272024'
  alias: –û—Ç–∫—Ä—ã—Ç—å –¥–æ–º–æ—Ñ–æ–Ω —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  description: ''
  trigger:
  - platform: event
    event_type: ios.action_fired
    event_data:
      actionID: 23448B64-1AF0-498C-98D9-158B8B6F923D
      actionName: –û—Ç–∫—Ä—ã—Ç—å –¥–≤–µ—Ä—å
      sourceDeviceID: iphoneans
      sourceDeviceName: iPhone_ANS
      sourceDevicePermanentID: E589AD6D-665A-494A-88A7-B466809EB9DE
      triggerSource: preview
  condition: []
  action:
  - service: script.turn_on
    data: {}
    target:
      entity_id: script.domru_open_door_657617
  mode: single
- id: '1648212086564'
  alias: Radiacode –æ—Ç–≤–∞–ª–∏–ª—Å—è, –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫
  description: ''
  trigger:
  - platform: time_pattern
    minutes: /1
  - platform: state
    entity_id: device_tracker.ble_tracker_radiacode
    to: home
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: device_tracker.ble_tracker_radiacode
      state: home
    - condition: state
      entity_id: person.ans
      state: home
      for:
        hours: 0
        minutes: 10
        seconds: 0
  - condition: template
    value_template: '{% if states(''sensor.radiacode'') != "unknown" %}

      {{ (as_timestamp(now()) - as_timestamp(states.sensor.radiacode.last_updated))
      > 60 }}

      {% elif states(''sensor.radiacode'') == "unknown" %}

      true

      {% else %}

      false

      {% endif %}'
  action:
  - service: shell_command.radiacode_kill
    data: {}
  - delay:
      hours: 0
      minutes: 0
      seconds: 2
      milliseconds: 0
  - service: shell_command.radiacode_start
    data: {}
  - wait_for_trigger:
    - platform: state
      entity_id: sensor.radiacode
      for:
        hours: 0
        minutes: 0
        seconds: 0
    continue_on_timeout: false
    timeout: 00:02:00
  - service: notify.telegram
    data:
      title: ‚ò¢Ô∏è *–†–∞–¥–∏–∞—Ü–∏–æ–Ω–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥*
      message: '–î–æ–∑–∏–º–µ—Ç—Ä –æ—Ç–≤–∞–ª–∏–ª—Å—è, –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –±—ã–ª –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω.

        –ó–Ω–∞—á–µ–Ω–∏–µ —Ä–∞–¥–∏–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–æ–Ω–∞ –Ω–∞ —Ç–µ–∫—É—â–∏–π –º–æ–º–µ–Ω—Ç: *{{ states(''sensor.radiacode'')
        }} {{ state_attr(''sensor.radiacode'', ''unit_of_measurement'') }}* –ø—Ä–∏ —Å—Ä–µ–¥–Ω–µ–º
        –∑–Ω–∞—á–µ–Ω–∏–∏ {{ states(''sensor.radiacode_dr_mean_value'') }} {{ state_attr(''sensor.radiacode_dr_mean_value'',
        ''unit_of_measurement'') }}.

        –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –±—ã–ª–æ {{ relative_time(states.sensor.radiacode.last_updated)
        }} –Ω–∞–∑–∞–¥.'
  mode: single
- id: '1648396428257'
  alias: Radiacode - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∑–∞–ø—Ä–æ—Å—É –≤ Telegram
  description: ''
  trigger:
  - platform: event
    event_type: telegram_command
    event_data:
      command: /radiation
  - platform: event
    event_type: telegram_callback
    event_data:
      data: /radiation
  condition: []
  action:
  - service: telegram_bot.send_message
    data:
      title: ‚ò¢Ô∏è *–†–∞–¥–∏–∞—Ü–∏–æ–Ω–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥*
      message: '–ó–Ω–∞—á–µ–Ω–∏–µ —Ä–∞–¥–∏–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–æ–Ω–∞ –Ω–∞ —Ç–µ–∫—É—â–∏–π –º–æ–º–µ–Ω—Ç: *{{

        states(''sensor.radiacode'') }} {{ state_attr(''sensor.radiacode'',

        ''unit_of_measurement'') }}* –ø—Ä–∏ —Å—Ä–µ–¥–Ω–µ–º –∑–Ω–∞—á–µ–Ω–∏–∏ {{

        states(''sensor.radiacode_dr_mean_value'') }} {{

        state_attr(''sensor.radiacode_dr_mean_value'', ''unit_of_measurement'') }}.


        –°–∫–æ—Ä–æ—Å—Ç—å —Å—á—ë—Ç–∞: {{ states(''sensor.radiacode_cr'') }} CPS –ø—Ä–∏ —Å—Ä–µ–¥–Ω–µ–º –∑–Ω–∞—á–µ–Ω–∏–∏
        {{ states(''sensor.radiacode_cr_mean_value'') }} CPS.


        –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –±—ã–ª–æ {{

        relative_time(states.sensor.radiacode.last_updated) }} –Ω–∞–∑–∞–¥.

        '
      target: '{{ trigger.event.data.user_id }}'
      parse_mode: markdown
      disable_notification: true
      message_tag: msg_to_edit
      inline_keyboard:
      - üîô –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é:/back
  mode: single
