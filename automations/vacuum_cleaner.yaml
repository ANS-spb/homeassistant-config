####################################
# –ü—ã–ª–µ—Å–æ—Å: –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ #
####################################

- alias: "Vacuum - –û–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ —É–±–æ—Ä–∫–∏"
  id: vacuum_telegram_begin_info
  initial_state: true
  trigger:
    platform: state
    entity_id: vacuum.roborock_s6_pure
    to: "cleaning"
    not_from: "unavailable"
  action:
    - service: telegram_bot.send_message
      data:
        target: !secret telegram_bot_allowed_chat_id1
        message: "_–î—Ä—É–∂–æ—á–µ–∫_ –Ω–∞—á–∞–ª —É–±–æ—Ä–∫—É."
        inline_keyboard:
          - "üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å:/vacuum_stop, ‚èé –ù–∞ –±–∞–∑—É:/vacuum_go_home"

- alias: "Vacuum - Telegram Control - Stop"
  id: vacuum_telegram_stop
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: "/vacuum_stop"
  action:
    - service: vacuum.pause
      entity_id: vacuum.roborock_s6_pure
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: "{{ trigger.event.data.id }}"
        message: "–ö–æ–º–∞–Ω–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞"
    - service: telegram_bot.edit_message
      data:
        message_id: "{{ trigger.event.data.message.message_id }}"
        chat_id: "{{ trigger.event.data.chat_id }}"
        message: |
          _–î—Ä—É–∂–æ—á–µ–∫_ –Ω–∞—á–∞–ª —É–±–æ—Ä–∫—É.
          –£–±–æ—Ä–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.
        inline_keyboard:
          - "‚èé –ù–∞ –±–∞–∑—É:/vacuum_go_home"

- alias: "Vacuum - Telegram Control - Go to Base"
  id: vacuum_tetegram_to_return
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: "/vacuum_go_home"
  action:
    - service: vacuum.pause
      entity_id: vacuum.roborock_s6_pure
    - delay: 1
    - service: vacuum.return_to_base
      entity_id: vacuum.roborock_s6_pure
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: "{{ trigger.event.data.id }}"
        message: "–ö–æ–º–∞–Ω–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞"
    - service: telegram_bot.edit_message
      data:
        message_id: "{{ trigger.event.data.message.message_id }}"
        chat_id: "{{ trigger.event.data.chat_id }}"
        message: |
          _–î—Ä—É–∂–æ—á–µ–∫_ –Ω–∞—á–∞–ª —É–±–æ—Ä–∫—É.
          –£–±–æ—Ä–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, —Ä–æ–±–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –±–∞–∑—É.

- alias: "Vacuum - –û–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ –≤–æ–∑—Ä–∞—â–µ–Ω–∏–∏ –ø—ã–ª–µ—Å–æ—Å–∞ –Ω–∞ –±–∞–∑—É [notify]"
  id: vacuum_telegram_returned_info
  initial_state: true
  trigger:
    platform: state
    entity_id: vacuum.roborock_s6_pure
    to: "docked"
    not_from: "unavailable"
  action:
    - service: notify.telegram
      data:
        message: "_–î—Ä—É–∂–æ—á–µ–∫_ –≤–µ—Ä–Ω—É–ª—Å—è –Ω–∞ –±–∞–∑—É (–∑–∞–∫–æ–Ω—á–∏–ª —É–±–æ—Ä–∫—É)."

- alias: "Vacuum - –û–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ –∑–∞–±—ã—Ç–æ–º –ø—ã–ª–µ—Å–æ—Å–µ [notify]"
  id: vacuum_telegram_lost_info
  initial_state: true
  trigger:
    platform: state
    entity_id: vacuum.roborock_s6_pure
    to: "idle"
    for:
      minutes: 15
  action:
    - service: notify.telegram
      data:
        message: "_–î—Ä—É–∂–æ—á–µ–∫_ –ø–æ—Ç–µ—Ä—è–ª—Å—è –∏ –±–µ–∑–¥–µ–ª—å–Ω–∏—á–∞–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –±–∞–∑—É."
    - service: vacuum.return_to_base
      data:
        entity_id: vacuum.roborock_s6_pure

- alias: "Vacuum - –û–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ [notify]"
  id: vacuum_telegram_error_info
  initial_state: true
  trigger:
    platform: state
    entity_id: vacuum.roborock_s6_pure
    to: "error"
    not_from: "unavailable"
  action:
    - service: notify.telegram
      data_template:
        message: |
          _–î—Ä—É–∂–æ—á–µ–∫_: –ü—Ä–æ–∏–∑–æ—à–ª–∞ *–æ—à–∏–±–∫–∞*!
          {{ state_attr('vacuum.roborock_s6_pure', "error") }}

- alias: "Vacuum - –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —É–±–æ—Ä–∫–∞ –ø–æ –±—É–¥–Ω—è–º [—É—Ç—Ä–æ]"
  id: vacuum_automation_workday_cleaning
  initial_state: true
  trigger:
    platform: state
    entity_id: group.devices
    to: "not_home"
    for:
      minutes: 20
  condition:
    condition: and
    conditions:
      - condition: time
        after: "07:30:00"
        before: "10:30:00"
#        weekday:
#          - mon
#          - tue
#          - wed
#          - thu
#          - fri
      - condition: state
        entity_id: binary_sensor.workday
        state: "on"
      - condition: template
        value_template: "{{ now().day != this.attributes.last_triggered.day | default(0) }}"
  action:
    - service: vacuum.set_fan_speed
      data:
        entity_id: vacuum.roborock_s6_pure
        fan_speed: Turbo
    - service: vacuum.start
      data:
        entity_id: vacuum.roborock_s6_pure
