###################################
#        –ú–µ–Ω—é –≤ Telegram          #
###################################

- alias: Telegram Menu start
  id: telegram_menu_start
  description: "–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –∏ –ø–æ–∫–∞–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é"
  trigger:
    - platform: event
      event_type: telegram_command
      event_data:
        command: /start
    - platform: event
      event_type: telegram_callback
      event_data:
        command: /back
  condition: []
  action:
    - choose:
        - conditions:
            - condition: template
              value_template: '{{ trigger.event.data.command == "/start" }}'
          sequence:
            - service: telegram_bot.send_message
              data:
                message: &stmsg >
                  {{ [ "–ß—Ç–æ –∂–µ–ª–∞–µ—Ç–µ, –ü–æ–≤–µ–ª–∏—Ç–µ–ª—å?", "–ß—Ç–æ —è –º–æ–≥—É –¥–ª—è –í–∞—Å —Å–¥–µ–ª–∞—Ç—å?", "–í–Ω–∏–º–∞—é!", "–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è" ] | random }}
                parse_mode: html
                disable_notification: true
                disable_web_page_preview: true
                timeout: 500
                inline_keyboard: &mainkeyb
                  - üí° –°–≤–µ—Ç:/lights, ‚Ñπ –°—Ç–∞—Ç—É—Å:/status
                  - ‚òÄ –ü–æ–≥–æ–¥–∞:/weather, üíª –°–∏—Å—Ç–µ–º–∞:/system
                  - ‚ò¢Ô∏è –†–∞–¥–∏–∞—Ü–∏—è:/radiation, üì∏ –§–æ—Ç–æ —Å –¥–æ–º–æ—Ñ–æ–Ω–∞:/photo_entrance
                target: "{{ trigger.event.data.chat_id }}"
        - conditions:
            - condition: template
              value_template: '{{ trigger.event.data.command == "/back" }}'
          sequence:
            - service: telegram_bot.edit_message
              data:
                message_id: last
                chat_id: "{{ trigger.event.data.chat_id }}"
                message: *stmsg
                inline_keyboard: *mainkeyb
                target: "{{ trigger.event.data.chat_id }}"
  mode: single

- alias: Telegram Menu Lights
  id: telefram_menu_lights
  description: "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–≤–µ—Ç–æ–º —á–µ—Ä–µ–∑ Telegram"
  trigger:
    - platform: event
      event_type: telegram_callback
      event_data: {}
  condition: []
  action:
    - choose:
        - conditions:
            - condition: template
              value_template: '{{ trigger.event.data.command == "/lights" }}'
          sequence:
            - service: telegram_bot.answer_callback_query
              data_template:
                callback_query_id: "{{ trigger.event.data.id }}"
                message: –ß—Ç–æ –í—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Å–æ —Å–≤–µ—Ç–æ–º?
            - service: telegram_bot.edit_message
              data:
                message_id: last
                chat_id: "{{ trigger.event.data.chat_id }}"
                message: &msg |
                  {%if states.light | rejectattr('entity_id', 'in', 
                  ['light.50ec50dfc9c5_light', 'light.50ec50e1b80d_light']) | selectattr('entity_id') |
                  selectattr('state','eq','on') | map(attribute='entity_id') | list | count == 0 %}*–°–≤–µ—Ç* –≤–µ–∑–¥–µ –≤—ã–∫–ª—é—á–µ–Ω.
                  {% else %}*–°–≤–µ—Ç* –≤–∫–ª—é—á–µ–Ω: {{ states.light | rejectattr('entity_id', 'in', 
                  ['light.50ec50dfc9c5_light', 'light.50ec50e1b80d_light'])| selectattr("state", "eq", "on") |
                  map(attribute  = "name") | join(", ") }}.{% endif %}
                inline_keyboard: &keyb
                  - –í–∫–ª—é—á–∏—Ç—å —Å–≤–µ—Ç –≤ –∫–æ–º–Ω–∞—Ç–µ:/lighton
                  - '{% if is_state("light.prikhozhaia", "off")%}{{"üî¥"}}{%else %}{{"üü¢"}}{% endif %} –ü—Ä–∏—Ö–æ–∂–∞—è:/lobby_toggle,
                    {% if is_state("light.kukhnia_hue", "off") %}{{"üî¥"}}{% else %}{{"üü¢"}}{%endif %} –ö—É—Ö–Ω—è:/kitchen_toggle'
                  - '{% if is_state("light.torsher_2", "off") %}{{"üî¥"}}{%else %}{{"üü¢"}}{% endif %} –¢–æ—Ä—à–µ—Ä:/torsher_toggle'
                  - '{% if is_state("light.living_room", "off") %}{{"üî¥"}}{%else %}{{"üü¢"}}{% endif %} –õ–∞–º–ø–∞:/living_toggle,
                    {% if is_state("light.liustra", "off") %}{{"üî¥"}}{% else %}{{"üü¢"}}{%endif %} –õ—é—Å—Ç—Ä–∞:/liustra_toggle'
                  - –í—ã–∫–ª—é—á–∏—Ç—å –í–°√ã:/lightoff
                  - –ù–∞–∑–∞–¥:/back
        - conditions:
            - condition: template
              value_template: '{{ trigger.event.data.command == "/lighton" }}'
          sequence:
            - service: telegram_bot.answer_callback_query
              data_template:
                callback_query_id: "{{ trigger.event.data.id }}"
                message: "–í–∫–ª—é—á–∞—é –æ–±—ã—á–Ω—ã–π —Å–≤–µ—Ç :)"
            - service: script.1599944056170
              data: {}
            - service: telegram_bot.edit_message
              data:
                message_id: "{{ trigger.event.data.message.message_id }}"
                chat_id: "{{ trigger.event.data.chat_id }}"
                callback_query_id: "{{ trigger.event.data.id }}"
                message: *msg
                inline_keyboard: *keyb
        - conditions:
            - condition: template
              value_template: '{{ trigger.event.data.command == "/lobby_toggle" }}'
          sequence:
            - service: telegram_bot.answer_callback_query
              data_template:
                callback_query_id: "{{ trigger.event.data.id }}"
                message: –ü–µ—Ä–µ–∫–ª—é—á–∞—é —Å–≤–µ—Ç –≤ –ø—Ä–∏—Ö–æ–∂–µ–π.
            - service: light.toggle
              target:
                entity_id: light.prikhozhaia
            - delay:
                milliseconds: 500
            - service: telegram_bot.edit_message
              data:
                message_id: "{{ trigger.event.data.message.message_id }}"
                chat_id: "{{ trigger.event.data.chat_id }}"
                callback_query_id: "{{ trigger.event.data.id }}"
                message: *msg
                inline_keyboard: *keyb
        - conditions:
            - condition: template
              value_template: '{{ trigger.event.data.command == "/kitchen_toggle" }}'
          sequence:
            - service: telegram_bot.answer_callback_query
              data_template:
                callback_query_id: "{{ trigger.event.data.id }}"
                message: '{% if is_state("light.kukhnia_hue", "off")%}{{"–í–∫–ª—é—á–∞—é —Å–≤–µ—Ç –Ω–∞ –∫—É—Ö–Ω–µ."}}{%else %}{{"–í—ã–∫–ª—é—á–∞—é —Å–≤–µ—Ç –Ω–∞ –∫—É—Ö–Ω–µ."}}{% endif %}'
            - service: light.toggle
              target:
                entity_id: light.kukhnia_hue
            - delay:
                milliseconds: 500
            - service: telegram_bot.edit_message
              data:
                message_id: "{{ trigger.event.data.message.message_id }}"
                chat_id: "{{ trigger.event.data.chat_id }}"
                callback_query_id: "{{ trigger.event.data.id }}"
                message: *msg
                inline_keyboard: *keyb
        - conditions:
            - condition: template
              value_template: '{{ trigger.event.data.command == "/torsher_toggle" }}'
          sequence:
            - service: telegram_bot.answer_callback_query
              data_template:
                callback_query_id: "{{ trigger.event.data.id }}"
                message: '{% if is_state("light.torsher_2", "off")%}{{"–í–∫–ª—é—á–∞—é —Ç–æ—Ä—à–µ—Ä –≤ —Å–ø–∞–ª—å–Ω–µ."}}{%else %}{{"–í—ã–∫–ª—é—á–∞—é –ª–∞–º–ø—É –≤ —Å–ø–∞–ª—å–Ω–µ."}}{% endif %}'
            - service: light.toggle
              target:
                entity_id: light.torsher
            - delay:
                milliseconds: 500
            - service: telegram_bot.edit_message
              data:
                message_id: "{{ trigger.event.data.message.message_id }}"
                chat_id: "{{ trigger.event.data.chat_id }}"
                callback_query_id: "{{ trigger.event.data.id }}"
                message: *msg
                inline_keyboard: *keyb
        - conditions:
            - condition: template
              value_template: '{{ trigger.event.data.command == "/living_toggle" }}'
          sequence:
            - service: telegram_bot.answer_callback_query
              data_template:
                callback_query_id: "{{ trigger.event.data.id }}"
                message: '{% if is_state("light.living_room", "off")%}{{"–í–∫–ª—é—á–∞—é –ª–∞–º–ø—É –≤ —Å–ø–∞–ª—å–Ω–µ."}}{%else %}{{"–í—ã–∫–ª—é—á–∞—é –ª–∞–º–ø—É –≤ —Å–ø–∞–ª—å–Ω–µ."}}{% endif %}'
            - service: light.toggle
              target:
                entity_id: light.living_room
            - delay:
                milliseconds: 500
            - service: telegram_bot.edit_message
              data:
                message_id: "{{ trigger.event.data.message.message_id }}"
                chat_id: "{{ trigger.event.data.chat_id }}"
                callback_query_id: "{{ trigger.event.data.id }}"
                message: *msg
                inline_keyboard: *keyb
        - conditions:
            - condition: template
              value_template: '{{ trigger.event.data.command == "/liustra_toggle" }}'
          sequence:
            - service: telegram_bot.answer_callback_query
              data_template:
                callback_query_id: "{{ trigger.event.data.id }}"
                message: '{% if is_state("light.liustra", "off")%}{{"–í–∫–ª—é—á–∞—é –ª—é—Å—Ç—Ä—É –≤ —Å–ø–∞–ª—å–Ω–µ."}}{%else %}{{"–í—ã–∫–ª—é—á–∞—é –ª—é—Å—Ç—Ä—É –≤ —Å–ø–∞–ª—å–Ω–µ."}}{% endif %}'
            - service: light.toggle
              target:
                entity_id: light.liustra
            - delay:
                milliseconds: 500
            - service: telegram_bot.edit_message
              data:
                message_id: "{{ trigger.event.data.message.message_id }}"
                chat_id: "{{ trigger.event.data.chat_id }}"
                callback_query_id: "{{ trigger.event.data.id }}"
                message: *msg
                inline_keyboard: *keyb
        - conditions:
            - condition: template
              value_template: '{{ trigger.event.data.command == "/lightoff" }}'
          sequence:
            - service: telegram_bot.answer_callback_query
              data_template:
                callback_query_id: "{{ trigger.event.data.id }}"
                message: –í—ã–∫–ª—é—á–∞—é –≤–µ—Å—å —Å–≤–µ—Ç!
            - service: script.1644819849093
              data: {}
            - delay:
                milliseconds: 2000
            - service: telegram_bot.edit_message
              data:
                message_id: "{{ trigger.event.data.message.message_id }}"
                chat_id: "{{ trigger.event.data.chat_id }}"
                callback_query_id: "{{ trigger.event.data.id }}"
                message: *msg
                inline_keyboard: *keyb
      default: []
  mode: queued

- alias: Telegram Menu Sensors
  id: telegram_menu_sensors
  description: "–°—Ç–∞—Ç—É—Å –¥–∞—Ç—á–∏–∫–æ–≤ –∏ —Å–≤–µ—Ç–∞"
  trigger:
    - platform: event
      event_type: telegram_callback
      event_data:
        data: /status
  condition: []
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: "{{ trigger.event.data.id }}"
        message: –ó–∞–ø—Ä–æ—Å —Å—Ç–∞—Ç—É—Å–∞ –¥–∞—Ç—á–∏–∫–æ–≤
    - service: script.dynamic_update_all_light_group
      data: {}
    - service: telegram_bot.edit_message
      data_template:
        message_id: last
        chat_id: "{{ trigger.event.data.chat_id }}"
        message: |-
          *–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –∫–æ–º–Ω–∞—Ç–µ* {{states('sensor.582d3439b574_temperature')|round(0)|format(morph='–≥—Ä–∞–¥—É—Å',as_text=false)}}.
          *–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–∞ –∫—É—Ö–Ω–µ* {{states('sensor.ble_temperature_datchik_na_kukhne')|round(0)|format(morph='–≥—Ä–∞–¥—É—Å',as_text=false)}}.
          *–í–ª–∞–∂–Ω–æ—Å—Ç—å –≤ –∫–æ–º–Ω–∞—Ç–µ* {{states('sensor.582d3439b574_humidity')|round(0)}}%
          *–í–ª–∞–∂–Ω–æ—Å—Ç—å –Ω–∞ –∫—É—Ö–Ω–µ* {{states('sensor.ble_humidity_datchik_na_kukhne')|round(0)}}%
          {% if is_state("binary_sensor.okno_v_komnate_contact", "off")%}
          –û–∫–Ω–æ –≤ —Å–ø–∞–ª—å–Ω–µ –∑–∞–∫—Ä—ã—Ç–æ. {% else %} *–û–∫–Ω–æ –≤ —Å–ø–∞–ª—å–Ω–µ –æ—Ç–∫—Ä—ã—Ç–æ!* {% endif %}
          {% if is_state("binary_sensor.okno_na_kukhne_contact", "off")%}
          –û–∫–Ω–æ –Ω–∞ –∫—É—Ö–Ω–µ –∑–∞–∫—Ä—ã—Ç–æ. {% else %}*–û–∫–Ω–æ –Ω–∞ –∫—É—Ö–Ω–µ –æ—Ç–∫—Ä—ã—Ç–æ!* {% endif %}
          {%if states.light | rejectattr('entity_id', 'in', 
          ['light.50ec50dfc9c5_light','light.50ec50e1b80d_light']) | selectattr('entity_id') |
          selectattr('state','eq','on') | map(attribute='entity_id') | list | count == 0 %}
          *–°–≤–µ—Ç* –≤–µ–∑–¥–µ –≤—ã–∫–ª—é—á–µ–Ω.
          {% else %}
          *–°–≤–µ—Ç* –≤–∫–ª—é—á–µ–Ω: {{ states.light| rejectattr('entity_id', 'in', 
          ['light.50ec50dfc9c5_light','light.50ec50e1b80d_light']) | selectattr("state", "eq", "on") 
          | map(attribute  = "name") | join(", ") }}.
          {% endif %}
        inline_keyboard:
          - –ù–∞–∑–∞–¥:/back
  mode: single

- alias: Telegram Menu System status
  id: telegram_menu_system
  description: "–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã"
  trigger:
    - platform: event
      event_type: telegram_callback
      event_data:
        data: /system
  condition: []
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: "{{ trigger.event.data.id }}"
        message: –ó–∞–ø—Ä–æ—Å —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã
    - service: telegram_bot.edit_message
      data_template:
        message_id: last
        chat_id: "{{ trigger.event.data.chat_id }}"
        message: |-

          {{ "\U0001F4BB" }} *System*:
          ------------------------------------------------        
          *CPU Usage*:   {{ states.sensor.processor_use.state }} %
          *Last Reboot*:   {{ as_timestamp(states.sensor.last_boot.state) | timestamp_custom('%d.%m.%Y %H:%M') }}
          *Temp CPU*:   {{ states.sensor.cpu_temp.state }} ¬∞C
          *Memory Used*:  {{ states.sensor.memory_use_percent.state }} %
          *Disk Used*:  {{ states.sensor.disk_use_percent.state }} %
          *Local IP Address:*   {{ states.sensor.local_ip.state }}
          *WAN IP Address:*   {{ states.sensor.d7160cc8a60d_sn_mynetname_net.state }}
        inline_keyboard:
          - –ù–∞–∑–∞–¥:/back
  mode: single

- alias: Telegram Menu Weather
  id: telegram_menu_weather
  description: "–ó–∞–ø—Ä–æ—Å –ø–æ–≥–æ–¥—ã"
  trigger:
    - platform: event
      event_type: telegram_callback
      event_data:
        data: /weather
  condition: []
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: "{{ trigger.event.data.id }}"
        message: Weather
    - service: telegram_bot.edit_message
      data_template:
        message_id: last
        chat_id: "{{ trigger.event.data.chat_id }}"
        message: |-
          {% if is_state("sun.sun", "above_horizon") -%} –°–æ–ª–Ω—Ü–µ —É–∂–µ –≤—Å—Ç–∞–ª–æ. 
          {%- else -%} –°–æ–ª–Ω—Ü–µ –≤—Å—Ç–∞–Ω–µ—Ç –≤ {{ as_timestamp(state_attr("sun.sun", "next_rising")) | timestamp_custom('%H:%M') }}. {%- endif %}
          –°–µ–π—á–∞—Å –∑–∞ –±–æ—Ä—Ç–æ–º {%- set current = state_attr('sensor.owm_report', 'current')['weather'][0]['id']|int () %} {%- set conditions = { '\U0001F32B': [701, 741], '\U0001F329': [210, 211, 212, 221], '\U000026C8': [200, 201, 202, 230, 231, 232], '\U000026C5': [801, 802, 803, 804], '\U00002614': [504, 314, 502, 503, 522, 300, 301, 302, 310, 311, 312, 313, 500, 501, 520, 521, 906], '\U00002744': [600, 601, 602, 611, 612, 620, 621, 622], '\U00002614\U00002744': [511, 615, 616], '\U00002600': [800], '\U0001F4A8': [905, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961], '\U000026A0': [711, 721, 731, 751, 761, 762, 771, 900, 901, 962, 903, 904] } %} {%- for condition, value in conditions.items() %} {%- if current in value %} {{- " " + condition}} {%- endif %} {%- endfor %} {{ state_attr('sensor.owm_report', 'current')['weather'][0]['description'] }}.
          –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {{states('sensor.owm_temp') | int(0) }}¬∞C, –æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {{state_attr('sensor.owm_report', 'current')['feels_like'] | int(0) }}¬∞C
          –í–ª–∞–∂–Ω–æ—Å—Ç—å: {{states('sensor.owm_humidity')}} %
          –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {{ state_attr('sensor.owm_report', 'current')['wind_speed'] | int(0) }} –º/—Å —Å –ø–æ—Ä—ã–≤–∞–º–∏ –¥–æ {{ state_attr('sensor.owm_report', 'current')['wind_gust'] | int(0) }} –º/—Å.
          
          –í —Ç–µ—á–µ–Ω–∏–µ —á–∞—Å–∞ –±—É–¥–µ—Ç {{ state_attr('sensor.owm_report', 'hourly')[1]['weather'][0]['description'] }}, —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ {{state_attr('sensor.owm_report', 'hourly')[1]['temp'] | int(0) }}¬∞C, –æ—â—É—â–µ–Ω–∏–µ {{state_attr('sensor.owm_report', 'hourly')[1]['feels_like'] | int(0) }}¬∞C.
          –í —Ç–µ—á–µ–Ω–∏–µ –¥–≤—É—Ö —á–∞—Å–æ–≤ {{ state_attr('sensor.owm_report', 'hourly')[2]['weather'][0]['description'] }}, —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ {{state_attr('sensor.owm_report', 'hourly')[2]['temp'] | int(0) }}¬∞C, –æ—â—É—â–µ–Ω–∏–µ {{state_attr('sensor.owm_report', 'hourly')[2]['feels_like'] | int(0) }}¬∞C.
          
          –í —Ü–µ–ª–æ–º, —Å–µ–≥–æ–¥–Ω—è {{ state_attr('sensor.owm_report', 'daily')[0].weather[0].description }}, –æ—Ç {{ state_attr('sensor.owm_report', 'daily')[0].temp.night | int(0) }} –¥–æ {{ state_attr('sensor.owm_report', 'daily')[0].temp.day | int(0) }} –≥—Ä–∞–¥—É—Å–æ–≤, –∑–∞–≤—Ç—Ä–∞ {{ state_attr('sensor.owm_report', 'daily')[1].weather[0].description }}, –æ—Ç {{ state_attr('sensor.owm_report', 'daily')[1].temp.night | int(0) }} –¥–æ {{ state_attr('sensor.owm_report', 'daily')[1].temp.day | int(0) }} –≥—Ä–∞–¥—É—Å–æ–≤.
        inline_keyboard:
          - –ù–∞–∑–∞–¥:/back
  mode: single
