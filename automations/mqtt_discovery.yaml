###################################
#     MQTT Sensors Discovery      #
###################################

- id: mqtt_sensors_discovery  
  alias: mqtt_sensors_discovery
  initial_state: true 
  trigger: 
    - platform: state 
      entity_id: binary_sensor.mqtt_broker
      to: 'on' 
    - event: start 
      platform: homeassistant 
  condition: 
    - condition: state 
      entity_id: binary_sensor.mqtt_broker
      state: 'on' 
  action:

    # Nut Mini battery
    - service: mqtt.publish 
      data: 
        topic: homeassistant/sensor/nut_battery/config 
        retain: true 
        payload: >- 
          { 
            "name":"Nut Mini", 
            "state_topic":"nut/battery", 
            "unique_id":"nut_battery",
            "device_class":"battery",
            "unit_of_measurement":"%", 
            "value_template":"{{ '{{' }} value | int(0) {{ '}}' }}",
            "device":{"identifiers":["nut_mini"],"manufacturer":"Nut","model":"Mini","name":"Nut Mini"} 
          }

#     - service: mqtt.publish 
#       data: 
#         topic: homeassistant/sensor/mqtt_broker_uptime/config 
#         retain: true 
#         payload: >- 
#           { 
#             "name":"MQTT Broker Uptime", 
#             "state_topic":"$SYS/broker/uptime", 
#             "icon":"mdi:timer-outline", 
#             "unit_of_measurement":"s", 
#             "entity_category": "diagnostic", 
#             "unique_id":"mqtt_broker_uptime",
#             "value_template":"{{ '{{' }} value | regex_replace('[^\\d]','') | trim {{ '}}' }}", 
#             "json_attributes_topic":"$SYS/broker/version", 
#             "json_attributes_template":"{\"version\":\"{{ '{{' }} (value | regex_replace('[\\s\\S]+?\\s(\\d)','\\\\1')) | trim {{ '}}' }}\"}", 
#             "device":{"identifiers":["mosquito_broker"],"manufacturer":"Eclipse","model":"Mosquitto","name":"Eclipse Mosquitto","sw_version":"{{ state_attr('sensor.mqtt_broker_uptime','version') }}","configuration_url":"https://mosquitto.org/"} 
#           }

#     - service: mqtt.publish 
#       data: 
#         topic: homeassistant/sensor/mqtt_broker_store_size/config 
#         retain: true 
#         payload: >- 
#           { 
#             "name":"MQTT Store Size", 
#             "state_topic":"$SYS/broker/store/messages/bytes", 
#             "icon":"mdi:database-outline", 
#             "unit_of_measurement":"MB", 
#             "unique_id":"mqtt_broker_store_size", 
#             "value_template":"{{ '{{' }} (value | int / 1024 / 1024) | round(2) {{ '}}' }}", 
#             "device":{"identifiers":["mosquito_broker"],"manufacturer":"Eclipse","model":"Mosquitto","name":"Eclipse Mosquitto","sw_version":"{{ state_attr('sensor.mqtt_broker_uptime','version') }}"} 
#           } 

#     - service: mqtt.publish 
#       data: 
#         topic: homeassistant/sensor/mqtt_broker_bytes_sent/config 
#         retain: true 
#         payload: >- 
#           { 
#             "name":"MQTT Bytes Sent", 
#             "state_topic":"$SYS/broker/bytes/sent", 
#             "icon":"mdi:upload-network-outline", 
#             "unit_of_measurement":"MB", 
#             "unique_id":"mqtt_broker_bytes_sent", 
#             "value_template":"{{ '{{' }} (value | int / 1024 / 1024) | round(2) {{ '}}' }}", 
#             "device":{"identifiers":["mosquito_broker"],"manufacturer":"Eclipse","model":"Mosquitto","name":"Eclipse Mosquitto","sw_version":"{{ state_attr('sensor.mqtt_broker_uptime','version') }}"} 
#           } 

#     - service: mqtt.publish 
#       data: 
#         topic: homeassistant/sensor/mqtt_broker_bytes_received/config 
#         retain: true 
#         payload: >- 
#           { 
#             "name":"MQTT Bytes Received", 
#             "state_topic":"$SYS/broker/bytes/received", 
#             "icon":"mdi:download-network-outline", 
#             "unit_of_measurement":"MB", 
#             "unique_id":"mqtt_broker_bytes_received", 
#             "value_template":"{{ '{{' }} (value | int / 1024 / 1024) | round(2) {{ '}}' }}", 
#             "device":{"identifiers":["mosquito_broker"],"manufacturer":"Eclipse","model":"Mosquitto","name":"Eclipse Mosquitto","sw_version":"{{ state_attr('sensor.mqtt_broker_uptime','version') }}"} 
#           } 

#     - service: mqtt.publish 
#       data: 
#         topic: homeassistant/sensor/mqtt_broker_load_connection/config 
#         retain: true 
#         payload: >- 
#           { 
#             "name":"MQTT Load Connection", 
#             "state_topic":"$SYS/broker/load/connections/1min", 
#             "icon":"mdi:account-network-outline", 
#             "unit_of_measurement":"client", 
#             "unique_id":"mqtt_broker_load_connection", 
#             "value_template":"{{ '{{' }} value {{ '}}' }}", 
#             "device":{"identifiers":["mosquito_broker"],"manufacturer":"Eclipse","model":"Mosquitto","name":"Eclipse Mosquitto","sw_version":"{{ state_attr('sensor.mqtt_broker_uptime','version') }}"} 
#           } 

#     - service: mqtt.publish 
#       data: 
#         topic: homeassistant/sensor/mqtt_broker_load_sent/config 
#         retain: true 
#         payload: >- 
#           { 
#             "name":"MQTT Load Sent", 
#             "state_topic":"$SYS/broker/load/bytes/sent/1min", 
#             "icon":"mdi:upload-network-outline", 
#             "unit_of_measurement":"MB", 
#             "unique_id":"mqtt_broker_load_sent", 
#             "value_template":"{{ '{{' }} (value | int / 1024 / 1024) | round(2) {{ '}}' }}", 
#             "device":{"identifiers":["mosquito_broker"],"manufacturer":"Eclipse","model":"Mosquitto","name":"Eclipse Mosquitto","sw_version":"{{ state_attr('sensor.mqtt_broker_uptime','version') }}"} 
#           } 

#     - service: mqtt.publish 
#       data: 
#         topic: homeassistant/sensor/mqtt_broker_load_received/config 
#         retain: true 
#         payload: >- 
#           { 
#             "name":"MQTT Load Received", 
#             "state_topic":"$SYS/broker/load/bytes/received/1min", 
#             "icon":"mdi:download-network-outline", 
#             "unit_of_measurement":"MB", 
#             "unique_id":"mqtt_broker_load_received", 
#             "value_template":"{{ '{{' }} (value | int / 1024 / 1024) | round(2) {{ '}}' }}", 
#             "device":{"identifiers":["mosquito_broker"],"manufacturer":"Eclipse","model":"Mosquitto","name":"Eclipse Mosquitto","sw_version":"{{ state_attr('sensor.mqtt_broker_uptime','version') }}"} 
#           }

