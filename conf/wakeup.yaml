#######################################
#         Световой будильник          #
#######################################

input_boolean:

  wakeup_enabled:
    name: "Световой будильник"
    icon: mdi:theme-light-dark

  wakeup_weekend:
    name: "Будильник по выходным"
    initial: off ## По умолчанию будильник для выходных дней выключен
    icon: mdi:calendar-blank

  sleep_enabled:
    name: "Вечерний свет"
#    initial: on
    icon: mdi:weather-night

  wakeup_disabled:
    name: "У меня отпуск"
    icon: mdi:emoticon-cool-outline

  wakeup_auto_time_enabled:
    name: "Автопереключение"
    icon: mdi:clock-star-four-points

input_select:

  wakeup_time:
    name: "Как едем на работу?"
    options:
      - Метро
      - Машина
      - Сидим дома
    icon: mdi:bus

input_datetime:

  wakeup_office_time:
    name: "На работу в офис (метро)"
    has_time: true
    has_date: false

  wakeup_office_car_time:
    name: "На работу в офис (прицепом)"
    has_time: true
    has_date: false

  wakeup_homeoffice_time:
    name: "На удалёнке"
    has_time: true
    has_date: false

  wakeup_weekend_time:
    name: "Время пробуждения по выходным"
    has_time: true
    has_date: false

  sleep_time:
    name: "Время ложиться спать"
    has_time: true
    has_date: false

automation:

  - id: light_wakeup_office
    alias: Световой будильник на работу
    trigger:
      - platform: time
        at: input_datetime.wakeup_office_time
    condition:
      - condition: state
        entity_id: input_boolean.wakeup_enabled
        state: "on"
      - condition: state
        entity_id: input_boolean.wakeup_disabled
        state: "off"
      - condition: state
        entity_id: binary_sensor.workday
        state: "on"
      - condition: state
        entity_id: input_select.wakeup_time
        state: "Метро"
    action:
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: sensor.osveshchionnost_v_spalne_illuminance_lux
                below: "10"
            sequence:
              - service: script.wakeup_bedroom
                data: {}
        default: []
    mode: single

  - id: light_wakeup_office_car
    alias: Световой будильник на работу прицепом
    trigger:
      - platform: time
        at: input_datetime.wakeup_office_car_time
    condition:
      - condition: state
        entity_id: input_boolean.wakeup_enabled
        state: "on"
      - condition: state
        entity_id: input_boolean.wakeup_disabled
        state: "off"
      - condition: state
        entity_id: binary_sensor.workday
        state: "on"
      - condition: state
        entity_id: input_select.wakeup_time
        state: "Машина"
    action:
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: sensor.osveshchionnost_v_spalne_illuminance_lux
                below: "10"
            sequence:
              - service: script.wakeup_bedroom
                data: {}
        default: []
    mode: single

  - id: light_wakeup_homeoffice
    alias: Световой будильник на удалёнку
    trigger:
      - platform: time
        at: input_datetime.wakeup_homeoffice_time
    condition:
      - condition: state
        entity_id: input_boolean.wakeup_enabled
        state: "on"
      - condition: state
        entity_id: input_boolean.wakeup_disabled
        state: "off"
      - condition: state
        entity_id: binary_sensor.workday
        state: "on"
      - condition: state
        entity_id: input_select.wakeup_time
        state: "Сидим дома"
    action:
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: sensor.osveshchionnost_v_spalne_illuminance_lux
                below: "10"
            sequence:
              - service: script.wakeup_bedroom
                data: {}
        default: []
    mode: single

  - id: light_wakeup_weekend
    alias: Световой будильник в выходной
    trigger:
      - platform: time
        at: input_datetime.wakeup_weekend_time
    condition:
      - condition: state
        entity_id: input_boolean.wakeup_weekend
        state: "on"
      - condition: or
        conditions:
          - condition: state
            entity_id: binary_sensor.workday
            state: "off"
          - condition: state
            entity_id: input_boolean.wakeup_disabled
            state: "on"
    action:
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: sensor.osveshchionnost_v_spalne_illuminance_lux
                below: "10"
            sequence:
              - service: script.wakeup_bedroom
                data: {}
        default: []
    mode: single

  - id: light_wakeup_auto_time
    alias: Световой будильник автоматическое время
    description: "Авто настройка будильника по дням недели"
    trigger:
      - platform: time
        at: "22:00:00"
    condition:
      - condition: state
        entity_id: input_boolean.wakeup_auto_time_enabled
        state: "on"
      - condition: state
        entity_id: input_boolean.wakeup_enabled
        state: "on"
      - condition: state
        entity_id: input_boolean.wakeup_disabled
        state: "off"
      - condition: state
        entity_id: binary_sensor.workday_tomorrow
        state: "on"
      - condition: template
        value_template: "{{ now().day != this.attributes.last_triggered.day | default(0) }}"
      - condition: template
        value_template: "{{ now().day != states.input_select.wakeup_time.last_changed.day | default(0) }}"
    action:
      - if:
          - condition: template
            value_template: "{{ now().weekday() in (0,) }}" # Если сегодня понедельник, то завтра во вторник на машине
        then:
          - service: input_select.select_option
            target:
              entity_id: input_select.wakeup_time
            data:
              option: 'Машина'
      - if:
          - condition: template
            value_template: "{{ now().weekday() in (1,) }}" # Если сегодня вторник, то завтра в среду дома
        then:
          - service: input_select.select_option
            target:
              entity_id: input_select.wakeup_time
            data:
              option: 'Сидим дома'
      - if:
          - condition: template
            value_template: "{{ now().weekday() in (6,) }}" # Если сегодня воскресенье, то завтра в понедельник на метро
        then:
          - service: input_select.select_option
            target:
              entity_id: input_select.wakeup_time
            data:
              option: 'Метро'
          - service: telegram_bot.send_message
            data:
              message: >
                ⏰ Будильник автоматически установлен как "{{states('input_select.wakeup_time')}}".
              parse_mode: html
              disable_notification: true
              disable_web_page_preview: true
              timeout: 500
              inline_keyboard:
                - ⏰ Изменить выбор:/wakeup
    mode: single