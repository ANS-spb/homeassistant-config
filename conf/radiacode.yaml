#######################################
# Сенсоры радиации c RadiaCode-101 и  #
# пересчёт значений с Zigbee гейгера  #
#######################################

shell_command:
  radiacode_kill: 'ssh -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa ans@192.168.1.252 pkill -9 -f /home/ans/homeassistant.py || exit 0'
  radiacode_start: 'ssh -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa ans@192.168.1.252 python3 /home/ans/homeassistant.py --connection bluetooth --bluetooth-mac 52:43:06:50:01:54 --interval 5  > /dev/null &'
  radiacode_usb_start: 'ssh -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa ans@192.168.1.252 python3 /home/ans/homeassistant.py --connection usb --interval 5 > /dev/null &'
  nut_battery_parse: 'ssh -o StrictHostKeyChecking=no -i /config/.ssh/id_rsa ans@192.168.1.252 /usr/share/hassio/homeassistant/nutbattery.sh'

template:

  - trigger:
      - platform: state
        entity_id:
          - sensor.geiger_counter_radiation_dose_per_hour
        not_to:
          - "unavailable"
          - "unknown"
    sensor:
      - name: "Geiger counter dose rate"
        unique_id: geiger-dr
        state: "{% set drmr = trigger.to_state.state | float(0) / 114.025 %} {{ drmr | round(2) }}"
        unit_of_measurement: "μSv/h"
        icon: mdi:radioactive

  - trigger:
    - platform: webhook
      webhook_id: radiacode
      local_only: true
      allowed_methods:
        - POST
        - GET
    sensor:
      - name: "Radiacode dose rate"
        state: "{{ trigger.json.dose_rate }}"
        unit_of_measurement: "μSv/h"
        icon: mdi:radioactive
        attributes:
          count_rate: "{{ trigger.json.count_rate }}"
          dose_rate_err: "{{ trigger.json.dose_rate_err }}"
          count_rate_err: "{{ trigger.json.count_rate_err }}"
          charge_level: "{{ trigger.json.charge_level }}"

  - trigger:
      - platform: webhook
        webhook_id: radiacode-connected
        local_only: true
        allowed_methods:
          - POST
          - GET
    binary_sensor:
      - name: "Radiacode connected"
        state: "{{ trigger.json.connected }}"

sensor:

  - platform: statistics
    name: geiger_dr_mean_value
    unique_id: geiger_dr_mean_value
    entity_id: sensor.geiger_dose_rate
    sampling_size: 1500
    state_characteristic: mean
    max_age:
      hours: 24

  - platform: statistics
    name: geiger_cr_mean_value
    unique_id: geiger_cr_mean_value
    entity_id: sensor.geiger_counter_radioactive_events_per_minute
    sampling_size: 1500
    state_characteristic: mean
    max_age:
      hours: 24

#   - platform: statistics
#     name: radiacode_dr_mean_value
#     unique_id: radiacode_dr_mean_value
#     entity_id: sensor.radiacode_dose_rate
#     sampling_size: 100000
#     state_characteristic: mean
#     max_age:
#       hours: 24

#   - platform: statistics
#     name: radiacode_cr_mean_value
#     unique_id: radiacode_cr_mean_value
#     entity_id: sensor.radiacode_count_rate
#     sampling_size: 100000
#     state_characteristic: mean
#     max_age:
#       hours: 24
